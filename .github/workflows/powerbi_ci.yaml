name: Power BI VISOPS

# Workflowのトリガー設定。手動での実行（workflow_dispatch）に設定。
on:
  workflow_dispatch:

jobs:
  # データセットのビルドジョブの定義
  build_datasets:
    runs-on: windows-latest  # Windows環境でジョブを実行
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # リポジトリからコードをチェックアウト

      - name: Download Tabular Editor and Default Rules
        shell: pwsh  # PowerShellでスクリプトを実行
        run: |
          # パスの設定
          $path = "${{ github.workspace }}"
          $tempPath = "$path\_temp"
          $toolPath = "$path\_tools\TE"
          # 一時ディレクトリの作成
          New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null              

          # Tabular Editorのバイナリをダウンロード
          Write-Host "Downloading Tabular Editor binaries"
          $downloadUrl = "https://github.com/TabularEditor/TabularEditor/releases/latest/download/TabularEditor.Portable.zip"
          $zipFile = "$tempPath\TabularEditor.zip"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
          Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force            

          # デフォルトルールのダウンロード
          Write-Host "Downloading Dataset default rules"
          $downloadUrl = "https://raw.githubusercontent.com/microsoft/Analysis-Services/master/BestPracticeRules/BPARules.json"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "$tempPath\Rules-Dataset.json"

      - name: Run Dataset Rules
        shell: pwsh  # PowerShellでスクリプトを実行
        run: |
          # パスの設定
          $path = "${{ github.workspace }}"
          $tempPath = "$path\_temp"
          $toolPath = "$path\_tools\TE\TabularEditor.exe"
          $rulesPath = "$path\Rules-Dataset.json"

          # ルールファイルが存在しない場合、ダウンロードしたルールを使用
          if (!(Test-Path $rulesPath))
          {
              Write-Host "Running downloaded rules"
              $rulesPath = "$tempPath\Rules-Dataset.json"
          }

          # データセットファイル（pbidatasetまたはpbism）を再帰的に検索
          $itemsFolders = Get-ChildItem -Path $path -recurse -include ("*.pbidataset", "*.pbism")

          # 各データセットファイルに対してルールを実行
          foreach($itemFolder in $itemsFolders)
          {   
              $itemPath = "$($itemFolder.Directory.FullName)\definition"

              # モデル定義ファイルが見つからない場合は別のパスを確認
              if (!(Test-Path $itemPath))
              {
                  $itemPath = "$($itemFolder.Directory.FullName)\model.bim"

                  if (!(Test-Path $itemPath))
                  {
                      throw "Cannot find semantic model definition."  # モデル定義が見つからない場合のエラーハンドリング
                  }
              }

              # ルールの実行
              Write-Host "Running rules for: '$itemPath'"
              Start-Process -FilePath "$toolPath" -ArgumentList """$itemPath"" -A ""$rulesPath"" -V" -NoNewWindow -Wait
          }

  # レポートのビルドジョブの定義
  build_reports:
    runs-on: windows-latest  # Windows環境でジョブを実行
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # リポジトリからコードをチェックアウト

      - name: Download PBIXInspector
        shell: pwsh  # PowerShellでスクリプトを実行
        run: |
          # パスの設定
          $path = "${{ github.workspace }}"
          $tempPath = "$path\_temp"
          $toolPath = "$path\_Tools\PBIInspector"
          # 一時ディレクトリの作成
          New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null

          # PBI Inspectorのダウンロード
          Write-Host "Downloading PBI Inspector"
          $downloadUrl = "https://github.com/NatVanG/PBI-Inspector/releases/latest/download/win-x64-CLI.zip" 
          $zipFile = "$tempPath\PBIXInspector.zip"
          Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
          Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force                            

          # デフォルトのルールのダウンロード
          Write-Host "Downloading Report default rules"
          $downloadUrl = "https://raw.githubusercontent.com/NatVanG/PBI-Inspector/main/Rules/Base-rules.json"
          Invoke-WebRequest -Uri $downloadUrl -OutFile "$tempPath\Rules-Report.json"

      - name: Run Report Rules
        shell: pwsh  # PowerShellでスクリプトを実行
        run: |
          # パスの設定
          $path = "${{ github.workspace }}"
          $tempPath = "$path\_temp"
          $toolPath = "$path\_Tools\PBIInspector\win-x64\CLI\PBIXInspectorCLI.exe"
          $rulesPath = "$path\Rules-Report.json"

          # ルールファイルが存在しない場合、ダウンロードしたルールを使用
          if (!(Test-Path $rulesPath))
          {
              Write-Host "Running default downloaded rules"
              $rulesPath = "$tempPath\Rules-Report.json"
          }

          # レポートファイル（pbir）を再帰的に検索
          $itemsFolders = Get-ChildItem -Path $path -recurse -include *.pbir

          # 各レポートファイルに対してルールを実行
          foreach($itemFolder in $itemsFolders)
          {   
              $itemPath = $itemFolder.Directory.FullName
              
              Write-Host "Running rules for: '$itemPath'"
              Start-Process -FilePath "$toolPath" -ArgumentList "-pbipreport ""$itemPath"" -rules ""$rulesPath"" -formats ""ADO""" -NoNewWindow -Wait
          }
